openapi: 3.0.0
info:
  description: |
    This is the documentation in-progress of pixelchain.  FIXME link(s).
  version: "1.0.0"
  title: pixelchain
  contact:
    email: BenWiederhake.GitHub@gmx.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /:
    get:
      summary: Basic, static description of the service,
      operationId: hello
      responses:
        '200':
          description: successful operation
  /config/:
    get:
      summary: Returns configuration, usually static until restart
      description: Returns screen resolution, hash, etc
      operationId: config
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
  /stats/:
    get:
      summary: Returns some statistics
      description: Returns whatever
      operationId: stats
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /pixel/{x}/{y}/:
    parameters:
      - name: x
        in: path
        description: x coordinate of the pixel
        required: true
        schema:
          type: integer
          format: uint16
      - name: y
        in: path
        description: y coordinate of the pixel
        required: true
        schema:
          type: integer
          format: uint16
    get:
      summary: Returns all current information about the selected pixel
      description: Returns rgb state, difficulty, and last block ID
      operationId: pixel_get
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixelGet'
        '404':
          description: outside of screen
    post:
      summary: Attempt to set the pixel
      description: Given the desired new difficulty and nonce, set new rgb state
      operationId: pixel_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixelPost'
      responses:
        '201':
          description: successful operation
        '403':
          description: config changed, nonce is bad, or insufficient difficulty
        '404':
          description: outside of screen
        '409':
          description: conflict with concurrent update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixelGet'
  /latest/:
    get:
      summary: Request the latest screen capture, accepting some delay
      operationId: capture_cached
      responses:
        '200':
          description: successful operation
          content:
            'image/png':
              schema:
                type: string
                format: binary
components:
  schemas:
    Config:
      type: object
      properties:
        width:
          type: integer
          format: int16
          description: Width of the canvas, in pixels
        height:
          type: integer
          format: int16
          description: Height of the canvas, in pixels
        hash:
          type: string
          description: Any fixed-length hash function from python's `hashlib.algorithms_guaranteed`
        pixelPenalty:
          type: integer
          format: int64
          description: The penalty-difficulty to request a single pixel
    PixelGet:
      type: object
      description: rgb state, difficulty, and last block ID
      properties:
        rgb:
          type: integer
          format: int32
        requiredDifficulty:
          type: integer
          format: int64
        lastBlock:
          type: string
          format: hex
    PixelPost:
      type: object
      description: Given the desired new difficulty and nonce, set new rgb state
      properties:
        lastBlock:
          type: string
          format: hex
        nonce:
          type: string
          format: hex
        newDifficulty:
          type: integer
          format: int64
        rgb:
          type: integer
          format: int32
